/*
 * This file was generated by qdbusxml2cpp-fix version 0.8
 * Command line was: qdbusxml2cpp-fix -c NetworkManager -p generated/org_freedesktop_networkmanager /home/kazushin/WorkSpace/Deepin/dde-qt-dbus-factory/xml/org.freedesktop.NetworkManager.xml
 *
 * qdbusxml2cpp-fix is Copyright (C) 2016 Deepin Technology Co., Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ORG_FREEDESKTOP_NETWORKMANAGER_H
#define ORG_FREEDESKTOP_NETWORKMANAGER_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

#include <DBusExtendedAbstractInterface>
#include <QtDBus/QtDBus>


/*
 * Proxy class for interface org.freedesktop.NetworkManager
 */
class __NetworkManager : public DBusExtendedAbstractInterface
{
    Q_OBJECT

public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManager"; }

public:
    explicit __NetworkManager(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~__NetworkManager();

    Q_PROPERTY(QList<QDBusObjectPath> ActiveConnections READ activeConnections NOTIFY ActiveConnectionsChanged)
    inline QList<QDBusObjectPath> activeConnections()
    { return qvariant_cast< QList<QDBusObjectPath> >(internalPropGet("ActiveConnections", &m_ActiveConnections)); }

    Q_PROPERTY(QDBusObjectPath PrimaryConnection READ primaryConnection NOTIFY PrimaryConnectionChanged)
    inline QDBusObjectPath primaryConnection()
    { return qvariant_cast< QDBusObjectPath >(internalPropGet("PrimaryConnection", &m_PrimaryConnection)); }

    Q_PROPERTY(QString PrimaryConnectionType READ primaryConnectionType NOTIFY PrimaryConnectionTypeChanged)
    inline QString primaryConnectionType()
    { return qvariant_cast< QString >(internalPropGet("PrimaryConnectionType", &m_PrimaryConnectionType)); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
// begin property changed signals
    void ActiveConnectionsChanged(const QList<QDBusObjectPath> & value) const;
    void PrimaryConnectionChanged(const QDBusObjectPath & value) const;
    void PrimaryConnectionTypeChanged(const QString & value) const;

// begin private slots
private Q_SLOTS:
    void onPropertyChanged(const QString &propName, const QVariant &value);

// begin private member vaiables
private:
    QList<QDBusObjectPath> m_ActiveConnections;
    QDBusObjectPath m_PrimaryConnection;
    QString m_PrimaryConnectionType;
};

namespace org {
  namespace freedesktop {
    typedef ::__NetworkManager NetworkManager;
  }
}
#endif
