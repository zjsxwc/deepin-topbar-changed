/*
 * This file was generated by qdbusxml2cpp-fix version 0.8
 * Command line was: qdbusxml2cpp-fix -c Wallpaper -p generated/com_deepin_dde_wallpaper /home/kirigaya/projects/Deepin/dde-qt-dbus-factory/xml/com.deepin.dde.Wallpaper.xml
 *
 * qdbusxml2cpp-fix is Copyright (C) 2016 Deepin Technology Co., Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef COM_DEEPIN_DDE_WALLPAPER_H
#define COM_DEEPIN_DDE_WALLPAPER_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

#include <DBusExtendedAbstractInterface>
#include <QtDBus/QtDBus>


/*
 * Proxy class for interface com.deepin.dde.Wallpaper
 */
class __Wallpaper : public DBusExtendedAbstractInterface
{
    Q_OBJECT

public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.dde.Wallpaper"; }

public:
    explicit __Wallpaper(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~__Wallpaper();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> clear()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("clear"), argumentList);
    }

    inline QDBusPendingReply<> pause()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("pause"), argumentList);
    }

    inline QDBusPendingReply<> play()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("play"), argumentList);
    }

    inline QDBusPendingReply<> setFolder(const QStringList &list, bool isVideo)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(list) << QVariant::fromValue(isVideo);
        return asyncCallWithArgumentList(QStringLiteral("setFolder"), argumentList);
    }

    inline QDBusPendingReply<> setInterval(int interval)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(interval);
        return asyncCallWithArgumentList(QStringLiteral("setInterval"), argumentList);
    }

    inline QDBusPendingReply<> setVolume(int volume)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(volume);
        return asyncCallWithArgumentList(QStringLiteral("setVolume"), argumentList);
    }

    inline QDBusPendingReply<> stop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("stop"), argumentList);
    }

Q_SIGNALS: // SIGNALS
// begin property changed signals

// begin private member vaiables
private:
};

namespace com {
  namespace deepin {
    namespace dde {
      typedef ::__Wallpaper Wallpaper;
    }
  }
}
#endif
